{"version":3,"file":"static/js/278.842d82b7.chunk.js","mappings":"uQAQe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEgBC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjCP,OACFQ,GAAWC,EAAAA,EAAAA,MAOXC,EAAaP,EAAaQ,IAAI,SAwBpC,OAtBAC,EAAAA,EAAAA,YAAU,WACHF,GACLX,EAASW,EACV,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACM,KAAVd,IAEJe,EAAAA,EAAAA,IAAaf,GACVgB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACP,GAAuB,IAAnBA,EAAQC,OACV,OAAOC,QAAQC,OACb,IAAIC,MAAJ,oCAAuCrB,EAAvC,OAIJO,EAAUe,QAAUL,EACpBd,EAAUI,EAAUe,QACrB,IACAC,OAAM,SAAAC,GAAC,OAAIC,EAAAA,OAAAA,QAAeD,EAAEE,QAArB,GACX,GAAE,CAAChB,EAAUH,EAAWP,EAAOY,KAG9B,iCACE,SAAC,KAAD,CAAae,SA/BD,SAAAC,GACd3B,EAAS2B,GACTtB,EAA8B,KAAdsB,EAAmB,CAAE5B,MAAO4B,GAAc,CAAC,EAC5D,IA6BI1B,IAAU,SAAC,KAAD,CAAW2B,KAAM3B,MAGjC,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { MovieList, SearchField } from 'components';\nimport { searchMovies } from 'api/api';\nimport { MovieContext } from 'context/MoviesCtx';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { movies: moviesCtx } = useContext(MovieContext);\n  const location = useLocation();\n\n  const getData = queryData => {\n    setQuery(queryData);\n    setSearchParams(queryData !== '' ? { query: queryData } : {});\n  };\n\n  const queryParam = searchParams.get('query');\n\n  useEffect(() => {\n    if (!queryParam) return;\n    setQuery(queryParam);\n  }, [queryParam]);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    searchMovies(query)\n      .then(({ results }) => {\n        if (results.length === 0) {\n          return Promise.reject(\n            new Error(`There are no movies named ${query}.`)\n          );\n        }\n\n        moviesCtx.current = results;\n        setMovies(moviesCtx.current);\n      })\n      .catch(e => Notify.failure(e.message));\n  }, [location, moviesCtx, query, queryParam]);\n\n  return (\n    <>\n      <SearchField getQuery={getData} />\n      {movies && <MovieList data={movies} />}\n    </>\n  );\n}\n"],"names":["Movies","useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","moviesCtx","useContext","MovieContext","location","useLocation","queryParam","get","useEffect","searchMovies","then","results","length","Promise","reject","Error","current","catch","e","Notify","message","getQuery","queryData","data"],"sourceRoot":""}